apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: traefik
  name: traefik-ingress-controller-sa
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: traefik
  namespace: traefik
spec:
  controller: traefik.io/ingress-controller
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: traefik-ingress-controller-cr
rules:
  - apiGroups: [""]
    resources:
      - services
      - endpoints
      - secrets
    verbs: ["get", "list", "watch"]
  - apiGroups: ["extensions", "networking.k8s.io"]
    resources:
      - ingresses
      - ingressclasses
    verbs: ["get", "list", "watch"]
  - apiGroups: ["extensions", "networking.k8s.io"]
    resources:
      - ingresses/status
    verbs: ["update"]
  - apiGroups: ["traefik.io", "traefik.containo.us"]
    resources:
      - middlewares
      - middlewaretcps
      - ingressroutes
      - traefikservices
      - ingressroutetcps
      - ingressrouteudps
      - tlsoptions
      - tlsstores
      - serverstransports
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: traefik-ingress-controller-crb
  namespace: traefik
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-ingress-controller-cr
subjects:
  - kind: ServiceAccount
    name: traefik-ingress-controller-sa
    namespace: traefik
---
apiVersion: v1
kind: Service
metadata:
  name: traefik
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
  namespace: traefik
spec:
  ports:
    - protocol: TCP
      name: http
      port: 80
    - protocol: TCP
      name: admin
      port: 8080
    - protocol: TCP
      name: https
      port: 443
  type: LoadBalancer
  loadBalancerIP: 10.84.248.47
  selector:
    app: traefik
  sessionAffinity: ClientIP
---
kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: traefik
  name: traefik
  labels:
    app: traefik
spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
    spec:
      serviceAccountName: traefik-ingress-controller-sa
      containers:
        - name: traefik
          image: traefik:v2.4
          args:
            - --api.insecure=true
            - --api.dashboard=true
            - --accesslog
            - --entrypoints.web.Address=:80
            - --entrypoints.websecure.Address=:443
            - --providers.kubernetescrd
            - --entrypoints.websecure.http.tls=true
            - --log.level=DEBUG
            - --providers.kubernetescrd.allowCrossNamespace=true
            - --providers.kubernetescrd.ingressclass=traefik
          ports:
            - name: web
              containerPort: 80
            - name: websecure
              containerPort: 443
            - name: admin
              containerPort: 8080
          volumeMounts:
            - name: portal-cert
              mountPath: /certs
              readOnly: true
      volumes:
        - name: portal-cert
          secret:
            secretName: portal-cert
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: redirect-https
  namespace: traefik
spec:
  redirectScheme:
    scheme: https
    permanent: true
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: traefik-dashboard
  namespace: traefik
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  entryPoints:
    - web
    - websecure
  routes:
    - match: Host(`cloudportal.jci.com`)
      kind: Rule
      middlewares:
        - name: redirect-https
      services:
        - name: traefik
          port: 8080
  tls:
    secretName: portal-cert
    domains:
    domains:
    - main: cloudportal.jci.com
      sans:
      - cloudportal.jci.com
---
apiVersion: traefik.containo.us/v1alpha1
kind: TLSStore
metadata:
  name: traefik-tls
  namespace: traefik
spec:
  defaultCertificate:
    secretName: portal-cert
-----

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: ingressroutes.traefik.containo.us

spec:
  group: traefik.containo.us
  version: v1alpha1
  names:
    kind: IngressRoute
    plural: ingressroutes
    singular: ingressroute
  scope: Namespaced
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: middlewares.traefik.containo.us

spec:
  group: traefik.containo.us
  version: v1alpha1
  names:
    kind: Middleware
    plural: middlewares
    singular: middleware
  scope: Namespaced
---
